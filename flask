Q1. What is Flask Framework? What are the advantages of Flask Framework?
Flask is a web framework written in Python. It is designed to be lightweight and easy to use, allowing developers to quickly build web applications. Flask follows the Model-View-Controller (MVC) architectural pattern and provides tools and libraries for handling web-related tasks.

Advantages of Flask Framework:

Simplicity: Flask has a simple and intuitive design, making it easy for beginners to learn and use. Its codebase is small and easy to understand, promoting rapid development.

Lightweight: Flask is a lightweight framework that does not impose many dependencies or restrictions. It allows developers to choose and integrate only the required components, resulting in a lean and efficient application.

Flexibility: Flask provides a high degree of flexibility, allowing developers to customize and tailor the framework according to their project requirements. It does not enforce any specific project structure or database choice, providing freedom in architectural decisions.

Q3. What is App routing in Flask? Why do we use app routes?
In Flask, app routing refers to the process of mapping URLs (Uniform Resource Locators) to specific functions or views in your web application. It allows you to define different routes or endpoints that correspond to different pages or functionalities in your application.

When a user makes a request to a specific URL, Flask uses the defined routes to determine which function should handle that request and generate the appropriate response. These routes are defined using the @app.route decorator in Flask.

App routes are used for several reasons:

URL routing: Routes help define the structure of your web application by mapping URLs to specific views or functions. They provide a way to organize and handle different requests to different endpoints.
Page navigation: By defining routes, you can create a navigation system within your application. Users can navigate between different pages or sections by accessing the corresponding URLs.
RESTful APIs: Routes are crucial when building RESTful APIs (Application Programming Interfaces). Each route can represent a specific resource or action, allowing clients to interact with your application through different URLs and HTTP methods.
Dynamic routes: Flask allows you to define dynamic routes that can accept variables as part of the URL. This enables you to create flexible and parameterized routes.
Q4. Create a “/welcome” route to display the welcome message “Welcome to ABC Corporation” and a “/” route to show the following details:

Company Name: ABC Corporation
Location: India
Contact Detail: 999-999-9999

#Code
#from flask import Flask

#app = Flask(__name__)

#@app.route("/welcome")
#def hello_world():
    #return "<h1>Welcome to ABC Corperation</h1>"

#@app.route("/")
#def display():
    #return "<h1>Company Name: ABC Corporation <br> Location: India <br>Contact Detail: 999-999-9999</h1>"

#if __name__=="__main__":
    #app.run(host="0.0.0.0")
